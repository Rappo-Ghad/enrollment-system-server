<?php

namespace Tests\Feature;

use App\Http\Resources\AuthenticatedUserResource as AuthenticatedUser;
use App\Repositories\AcademicTerm\AcademicTermRepositoryInterface;
use App\Repositories\AcademicYear\AcademicYearRepositoryInterface;
use App\Repositories\Department\DepartmentRepositoryInterface;
use App\Repositories\EnrolledStudent\EnrolledStudentRepositoryInterface;
use App\Repositories\Program\ProgramRepositoryInterface;
use App\Repositories\Student\StudentRepositoryInterface;
use App\Repositories\User\UserRepositoryInterface;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class EnrolledStudentControllerTest extends TestCase
{
    use RefreshDatabase;

    private AuthenticatedUser $auth;

    private EnrolledStudentRepositoryInterface $repository;

    private StudentRepositoryInterface $studentRepository;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->repository = resolve(EnrolledStudentRepositoryInterface::class);
        $this->studentRepository = resolve(StudentRepositoryInterface::class);
        $userRepository = resolve(UserRepositoryInterface::class);
        $academicYearRepository = resolve(AcademicYearRepositoryInterface::class);
        $academicTermRepository = resolve(AcademicTermRepositoryInterface::class);
        $departmentRepository = resolve(DepartmentRepositoryInterface::class);
        $programRepository = resolve(ProgramRepositoryInterface::class);

        $studentData = [
            'school_id' => '20220074839',
            'first_name' => 'Shan',
            'middle_name' => '',
            'last_name' => 'Padayhag',
            'address_line_1' => '',
            'address_line_2' => '',
            'city' => 'Cagayan de Oro City',
            'province' => 'Misamis Oriental',
            'sex' => 'male',
            'nationality' => 'Filipino',
            'guardian' => '',
            'guardian_number' => '',
        ];
        $this->studentRepository->createStudentIfNotExist($studentData);

        $academicYearRepository->createIfNotExistAcademicYear();

        $academicTermData = ['term' => 'First Semester'];
        $academicTermRepository->createAcademicTermIfNotExist($academicTermData);

        $departmentData = ['name' => 'College of Computer Studies'];
        $departmentRepository->addDepartmentIfNotExist($departmentData);

        $programData = [
            'department_id' => 1,
            'name' => 'Computer Science 3'
        ];
        $programRepository->addProgramIfNotExist($programData);

        $userData = [
            'username' => 'Shan',
            'password' => 'testpass',
            'first_name' => 'Shan',
            'middle_name' => '',
            'last_name' => 'Padayhag'
        ];
        $userRepository->createUser($userData);
        $this->auth = $userRepository->authenticateUser($userData);
    }

    /**
     * @test
     * @dataProvider validEnrolledStudentDataProvider
     */
    public function it_can_enroll_student_if_not_enrolled(array $enrollmentDetailsData)
    {
        $response = $this->post('/api/v1/enrolled-student', $enrollmentDetailsData, [
            'accept' => 'application/json',
            'authorization' => "Bearer {$this->auth->accessToken}"
        ]);

        $response->assertStatus(201);
        $response->assertJsonStructure([
            "student_id",
            "academic_year_id",
            "academic_term_id",
            "program_id",
            "updated_at",
            "created_at",
            "id",
        ]);
    }

    /**
     * @test
     * @dataProvider validEnrolledStudentDataProvider
     */
    public function it_can_retrieve_enroll_student_details_if_enrolled(array $enrollmentDetailsData)
    {
        $this->post('/api/v1/enrolled-student', $enrollmentDetailsData, [
            'accept' => 'application/json',
            'authorization' => "Bearer {$this->auth->accessToken}"
        ]);

        $response = $this->post('/api/v1/enrolled-student', $enrollmentDetailsData, [
            'accept' => 'application/json',
            'authorization' => "Bearer {$this->auth->accessToken}"
        ]);

        $response->assertStatus(200);
        $response->assertJsonStructure([
            "id",
            "student_id",
            "academic_year_id",
            "academic_term_id",
            "program_id",
            "created_at",
            "updated_at",
        ]);
    }

    /**
     * @test
     * @dataProvider invalidEnrolledStudentDataProvider
     */
    public function it_should_respond_with_error_when_given_invalid_enrollment_details(
        array $enrollmentDetailsData,
        int $status
    ) {
        $response = $this->post('/api/v1/enrolled-student', $enrollmentDetailsData, [
            'accept' => 'application/json',
            'authorization' => "Bearer {$this->auth->accessToken}"
        ]);

        $response->assertStatus($status);
    }

    /**
     * @test
     * @dataProvider validEnrolledStudentDataProvider
     */
    public function it_can_retrieve_enrolled_students(array $enrollmentDetailsData)
    {
        $student = $this->studentRepository->createStudentIfNotExist($enrollmentDetailsData);
        $enrollmentDetailsData['student_id'] = $student->id;
        $this->repository->enrollStudentIfNotEnrolled($enrollmentDetailsData);

        $response = $this->get('/api/v1/enrolled-student', [
            'accept' => 'application/json',
            'authorization' => "Bearer {$this->auth->accessToken}"
        ]);

        $response->assertStatus(200);
        $response->assertJsonStructure([
            0 => [
                "id",
                "student_id",
                "academic_year_id",
                "academic_term_id",
                "program_id",
                "created_at",
                "updated_at",
                "deleted_at",
                'student' => [
                    'id',
                    'school_id',
                    'first_name',
                    'middle_name',
                    'last_name',
                    'address_line_1',
                    'address_line_2',
                    'city',
                    'province',
                    'sex',
                    'nationality',
                    'guardian',
                    'guardian_number',
                    'updated_at',
                    'created_at',
                    'deleted_at',
                ],
                'academic_year' => [
                    'id',
                    'scope',
                    'created_at',
                    'updated_at',
                    'deleted_at'
                ],
                'academic_term' => [
                    'id',
                    'term',
                    'created_at',
                    'updated_at',
                    'deleted_at'
                ]
            ]
        ]);
    }

    /**
     * @test
     * @dataProvider validEnrolledStudentDataProvider
     */
    public function it_can_get_form_requirements_when_enrolling_a_student(array $enrollmentDetailsData)
    {
        $this->post('/api/v1/enrolled-student', $enrollmentDetailsData, [
            'accept' => 'application/json',
            'authorization' => "Bearer {$this->auth->accessToken}"
        ]);

        $response = $this->get('/api/v1/enrolled-student/create?school_id=20220074839', [
            'accept' => 'application/json',
            'authorization' => "Bearer {$this->auth->accessToken}"
        ]);

        $response->assertStatus(200);
        $response->assertJsonStructure([
            'academic_year' => [
                'id',
                'scope',
                'created_at',
                'updated_at',
                'deleted_at'
            ],
            'academic_term' => [
                'id',
                'term',
                'created_at',
                'updated_at',
                'deleted_at'
            ],
            'programs' => [
                0 => [
                    'id',
                    'department_id',
                    'name',
                    'created_at',
                    'updated_at',
                    'deleted_at'
                ]
            ],
            'student' => [
                'id',
                'school_id',
                'first_name',
                'middle_name',
                'last_name',
                'address_line_1',
                'address_line_2',
                'city',
                'province',
                'sex',
                'nationality',
                'guardian',
                'guardian_number',
                'created_at',
                'updated_at',
                'deleted_at'
            ]
        ]);
    }

    /**
     * @test
     */
    public function it_can_get_form_requirements_for_non_existing_student_when_enrolling_a_student() {
        $response = $this->get('/api/v1/enrolled-student/create', [
            'accept' => 'application/json',
            'authorization' => "Bearer {$this->auth->accessToken}"
        ]);

        $response->assertStatus(200);
        $response->assertJsonStructure([
            'academic_year' => [
                'id',
                'scope',
                'created_at',
                'updated_at',
                'deleted_at'
            ],
            'academic_term' => [
                'id',
                'term',
                'created_at',
                'updated_at',
                'deleted_at'
            ],
            'programs' => [
                0 => [
                    'id',
                    'department_id',
                    'name',
                    'created_at',
                    'updated_at',
                    'deleted_at'
                ]
            ],
            'student'
        ]);
    }

    public function validEnrolledStudentDataProvider(): array
    {
        return [
            [
                [
                    'school_id' => '20220074839',
                    'first_name' => 'Shan',
                    'middle_name' => '',
                    'last_name' => 'Padayhag',
                    'address_line_1' => '',
                    'address_line_2' => '',
                    'city' => 'Cagayan de Oro City',
                    'province' => 'Misamis Oriental',
                    'sex' => 'male',
                    'nationality' => 'Filipino',
                    'guardian' => '',
                    'guardian_number' => '',
                    'academic_year_id' => 1,
                    'academic_term_id' => 1,
                    'program_id' => 1,
                ]
            ],
            [
                [
                    'school_id' => '20220074839',
                    'first_name' => 'Shan',
                    'middle_name' => 'Middle',
                    'last_name' => 'Padayhag',
                    'address_line_1' => 'Address Line 1',
                    'address_line_2' => '',
                    'city' => 'Cagayan de Oro City',
                    'province' => 'Misamis Oriental',
                    'sex' => 'male',
                    'nationality' => 'Filipino',
                    'guardian' => 'Mother Name',
                    'guardian_number' => '09646839102',
                    'academic_year_id' => 1,
                    'academic_term_id' => 1,
                    'program_id' => 1,
                ]
            ],
            [
                [
                    'school_id' => '20220074839',
                    'first_name' => 'Shan',
                    'middle_name' => 'Middle',
                    'last_name' => 'Padayhag',
                    'address_line_1' => 'Address Line 1',
                    'address_line_2' => 'With Address Line 2',
                    'city' => 'Cagayan de Oro City',
                    'province' => 'Misamis Oriental',
                    'sex' => 'female',
                    'nationality' => 'Filipino',
                    'guardian' => 'Mother Name',
                    'guardian_number' => '09646839102',
                    'academic_year_id' => 1,
                    'academic_term_id' => 1,
                    'program_id' => 1,
                ]
            ],
            [
                [
                    'school_id' => '20220074839',
                    'first_name' => 'Shan',
                    'middle_name' => '',
                    'last_name' => 'Padayhag',
                    'address_line_1' => '',
                    'address_line_2' => '',
                    'city' => 'Cagayan de Oro City',
                    'province' => 'Misamis Oriental',
                    'sex' => 'MALE',
                    'nationality' => 'Filipino',
                    'guardian' => '',
                    'guardian_number' => '',
                    'academic_year_id' => 1,
                    'academic_term_id' => 1,
                    'program_id' => 1,
                ]
            ],
            [
                [
                    'school_id' => '20220074840',
                    'first_name' => 'Shan',
                    'middle_name' => '',
                    'last_name' => 'Padayhag',
                    'address_line_1' => '',
                    'address_line_2' => '',
                    'city' => 'Cagayan de Oro City',
                    'province' => 'Misamis Oriental',
                    'sex' => 'male',
                    'nationality' => 'Filipino',
                    'guardian' => '',
                    'guardian_number' => '',
                    'academic_year_id' => 1,
                    'academic_term_id' => 1,
                    'program_id' => 1,
                ]
            ],
        ];
    }

    public function invalidEnrolledStudentDataProvider(): array
    {
        return [
            [
                [
                    'school_id' => '20220074840',
                    'first_name' => 'Shan Number 3',
                    'middle_name' => '',
                    'last_name' => 'Padayhag',
                    'address_line_1' => '',
                    'address_line_2' => '',
                    'city' => 'Cagayan de Oro City',
                    'province' => 'Misamis Oriental',
                    'sex' => 'male',
                    'nationality' => 'Filipino',
                    'guardian' => '',
                    'guardian_number' => '',
                    'academic_year_id' => 1,
                    'academic_term_id' => 1,
                    'program_id' => 1,
                ],
                400
            ],
            [
                [
                    'school_id' => '20220074840',
                    'first_name' => 'Shan',
                    'middle_name' => '',
                    'last_name' => 'Padayhag',
                    'address_line_1' => '',
                    'address_line_2' => '',
                    'city' => 'Cagayan de Oro City',
                    'province' => 'Misamis Oriental',
                    'sex' => 'male',
                    'nationality' => 'Filipino',
                    'guardian' => '',
                    'guardian_number' => '',
                    'academic_year_id' => 2,
                    'academic_term_id' => 1,
                    'program_id' => 1,
                ],
                404
            ],
            [
                [
                    'school_id' => '20220074840',
                    'first_name' => 'Shan',
                    'middle_name' => '',
                    'last_name' => 'Padayhag',
                    'address_line_1' => '',
                    'address_line_2' => '',
                    'city' => 'Cagayan de Oro City',
                    'province' => 'Misamis Oriental',
                    'sex' => 'male',
                    'nationality' => 'Filipino',
                    'guardian' => '',
                    'guardian_number' => '',
                    'academic_year_id' => 1,
                    'academic_term_id' => 2,
                    'program_id' => 1,
                ],
                404
            ],
            [
                [
                    'school_id' => '20220074840',
                    'first_name' => 'Shan',
                    'middle_name' => '',
                    'last_name' => 'Padayhag',
                    'address_line_1' => '',
                    'address_line_2' => '',
                    'city' => 'Cagayan de Oro City',
                    'province' => 'Misamis Oriental',
                    'sex' => 'male',
                    'nationality' => 'Filipino',
                    'guardian' => '',
                    'guardian_number' => '',
                    'academic_year_id' => 1,
                    'academic_term_id' => 1,
                    'program_id' => 2,
                ],
                404
            ],
            [
                [
                    'school_id' => '20220074840',
                    'first_name' => 'Shan',
                    'middle_name' => '',
                    'address_line_1' => '',
                    'address_line_2' => '',
                    'city' => 'Cagayan de Oro City',
                    'province' => 'Misamis Oriental',
                    'sex' => 'male',
                    'nationality' => 'Filipino',
                    'guardian' => '',
                    'guardian_number' => '',
                    'academic_year_id' => 1,
                    'academic_term_id' => 1,
                    'program_id' => 1,
                ],
                400
            ],
            [
                [
                    'school_id' => '20220074840',
                    'first_name' => 'Shan',
                    'middle_name' => '',
                    'last_name' => 'Padayhag',
                    'address_line_1' => '',
                    'address_line_2' => '',
                    'city' => 'Cagayan de Oro City',
                    'province' => 'Misamis Oriental',
                    'sex' => 'male',
                    'nationality' => 'Filipino',
                    'guardian' => '',
                    'guardian_number' => '',
                    'academic_year_id' => 1,
                    'program_id' => 1,
                ],
                400
            ],
        ];
    }
}
